import osimport yamlfrom pathlib import Path# Required configuration keys with default sourcesREQUIRED_KEYS = [    'forecast_folder', 'output_csv', 'schedule_time',    'slack_webhook_url', 'thinkorswim']CONFIG = Nonedef load_config():    """    Load configuration from config.yaml or environment variables,    validate required keys, and cache result.    """    global CONFIG    if CONFIG is None:        base = os.getcwd()        path = os.path.join(base, 'config.yaml')        try:            with open(path, 'r') as f:                raw = yaml.safe_load(f) or {}        except FileNotFoundError:            raise FileNotFoundError(f"Configuration file not found at {path}")        # Override with environment variables        cfg = {}        for key, val in raw.items():            if isinstance(val, str) and val.startswith('${'):                # ENV var override syntax: ${KEY:-default}                env, default = val.strip('${}').split(':-')                cfg[key] = os.getenv(env, default)            else:                cfg[key] = val        # Validate required        missing = [k for k in REQUIRED_KEYS if k not in cfg]        if missing:            raise KeyError(f"Missing required config keys: {missing}")        CONFIG = cfg    return CONFIG