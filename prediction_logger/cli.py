import clickimport loggingfrom dateutil.parser import parsefrom .logger import runfrom pathlib import Pathdef setup_logging(verbose):    level = logging.DEBUG if verbose else logging.INFO    logging.basicConfig(level=level, format='[%(levelname)s] %(message)s')@click.command()@click.option('--date', help='Date for forecast (YYYY-MM-DD)', default=None)@click.option('--dry-run', is_flag=True, help='Preview without writing outputs')@click.option('--verbose', is_flag=True, help='Enable verbose logging')def main(date, dry_run, verbose):    setup_logging(verbose)    try:        logging.debug(f"CLI invoked for date={date}, dry_run={dry_run}")        if dry_run:            logging.info("DRY RUN: exiting without changes")            return        run(parse(date) if date else None)    except Exception as e:        logging.critical(f"Unhandled error: {e}")        from .notifications import notify        notify(f"Critical failure in CLI: {e}")        raiseif __name__ == '__main__':    main()